{"version":3,"sources":["middlewares/async.js","middlewares/stateSchema.js","middlewares/stateValidator.js","reducers/index.js","reducers/comments.js","actions/types.js","reducers/auth.js","actions/index.js","components/CommentBox.js","components/requireAuth.js","components/CommentList.js","components/App.js","index.js","Root.js"],"names":["dispatch","next","action","payload","then","response","newAction","$schema","$id","type","title","description","required","properties","comments","default","items","examples","auth","getState","tv4","validate","stateSchema","console","warn","combineReducers","state","data","map","comment","name","saveComment","fetchComments","axios","get","changeAuth","isLoggedIn","saveFeelsComment","feelsComment","Main","styled","main","Container","div","Form","form","Button","button","TextArea","textarea","CommentBox","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","onChange","Component","connect","actions","ChildComponent","ComposedComponent","shouldNavigateAway","history","push","requireAuth","CommentList","key","renderComments","Nav","nav","App","onClick","to","renderButton","renderHeader","path","component","exact","ReactDOM","render","children","initialState","store","createStore","reducers","applyMiddleware","async","stateValidator","document","querySelector"],"mappings":"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","file":"static/js/main.36e58704.chunk.js","sourcesContent":["export default ({ dispatch }) => (next) => (action) => {\n  // Check to see if an action has a promise on its 'payload' property\n  // If it does, then wait for it to resolve\n  // If it doesn't, then send the action on to the next middleware\n  if (!action.payload || !action.payload.then) {\n    return next(action);\n  }\n\n  // We want to wait for the promise to resolve (get its data!!)\n  // and then create a new action with that data and dispatch it\n  action.payload.then(function (response) {\n    const newAction = { ...action, payload: response };\n    dispatch(newAction);\n  });\n};\n","export default {\n  $schema: 'http://json-schema.org/draft-07/schema',\n  $id: 'http://example.com/example.json',\n  type: 'object',\n  title: 'The Root Schema',\n  description: 'The root schema comprises the entire JSON document.',\n  required: ['comments', 'auth'],\n  properties: {\n    comments: {\n      $id: '#/properties/comments',\n      type: 'array',\n      title: 'The Comments Schema',\n      description: 'An explanation about the purpose of this instance.',\n      default: [],\n      items: {\n        $id: '#/properties/comments/items',\n        type: 'string',\n        title: 'The Items Schema',\n        description: 'An explanation about the purpose of this instance.',\n        default: '',\n        examples: ['Comments #1', 'Comments #2'],\n      },\n    },\n    auth: {\n      $id: '#/properties/auth',\n      type: 'boolean',\n      title: 'The Auth Schema',\n      description: 'An explanation about the purpose of this instance.',\n      default: false,\n      examples: [true],\n    },\n  },\n};\n","import tv4 from 'tv4';\nimport stateSchema from './stateSchema';\n\nexport default ({ dispatch, getState }) => (next) => (action) => {\n  next(action);\n\n  if (!tv4.validate(getState(), stateSchema)) {\n    console.warn('Invalid state schema detected');\n  }\n};\n","import { combineReducers } from 'redux';\nimport commentsReducer from 'reducers/comments';\nimport authReducer from 'reducers/auth';\n\nexport default combineReducers({\n  comments: commentsReducer,\n  auth: authReducer,\n});\n","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\n\nexport default function (state = [], action) {\n  switch (action.type) {\n    case SAVE_COMMENT:\n      return [...state, action.payload];\n    case FETCH_COMMENTS:\n      const comments = action.payload.data.map((comment) => comment.name);\n      return [...state, ...comments];\n    default:\n      return state;\n  }\n}\n","export const SAVE_COMMENT = 'save_comment';\nexport const FETCH_COMMENTS = 'fetch_comments';\nexport const CHANGE_AUTH = 'change_auth';\nexport const SAVE_FEEL_COMMENT = 'save_feels_comment';\n","import { CHANGE_AUTH } from 'actions/types';\n\nexport default function (state = false, action) {\n  switch (action.type) {\n    case CHANGE_AUTH:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import axios from 'axios';\nimport {\n  SAVE_COMMENT,\n  FETCH_COMMENTS,\n  CHANGE_AUTH,\n  SAVE_FEEL_COMMENT,\n} from 'actions/types';\n\nexport function saveComment(comment) {\n  return {\n    type: SAVE_COMMENT,\n    payload: comment,\n  };\n}\n\nexport function fetchComments() {\n  const response = axios.get('https://jsonplaceholder.typicode.com/comments');\n  return {\n    type: FETCH_COMMENTS,\n    payload: response,\n  };\n}\n\nexport function changeAuth(isLoggedIn) {\n  return {\n    type: CHANGE_AUTH,\n    payload: isLoggedIn,\n  };\n}\n\nexport function saveFeelsComment(feelsComment) {\n  return {\n    type: SAVE_FEEL_COMMENT,\n    payload: feelsComment,\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport requireAuth from 'components/requireAuth';\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n  display: flex;\n  justify-content: center;\n  background-color: #f5f5f5;\n  height: calc(100vh - 37px);\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1em;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  border-radius: 5px;\n  padding: 7px 12px;\n  border: 1px solid #d5d5d5;\n  background-color: linear-gradient(#eee, #ddd);\n  font: 700 13px/18px Helvetica, arial;\n`;\n\nconst TextArea = styled.textarea`\n  border: 0;\n  border-radius: 5px;\n  height: 100px;\n  color: grey;\n  font-size: 0.8em;\n  font-family: Roboto-Italic;\n`;\n\nclass CommentBox extends Component {\n  state = { comment: '...' };\n\n  handleChange = (event) => {\n    this.setState({ comment: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.saveComment(this.state.comment);\n    this.setState({ comment: '' });\n  };\n\n  render() {\n    return (\n      <Main>\n        <Container>\n          <h1>Hi, how do you feel ?</h1>\n          <Form onSubmit={this.handleSubmit}>\n            <TextArea value={this.state.comment} onChange={this.handleChange} />\n            <Button>Send</Button>\n          </Form>\n        </Container>\n      </Main>\n    );\n  }\n}\n\nexport default connect(null, actions)(requireAuth(CommentBox));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (ChildComponent) => {\n  class ComposedComponent extends Component {\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n\n    shouldNavigateAway() {\n      if (!this.props.auth) {\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentList extends Component {\n  renderComments() {\n    return this.props.comments.map((comment) => {\n      return <li key={comment}>{comment}</li>;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Comment List</h4>\n        <ul>{this.renderComments()}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { comments: state.comments };\n}\n\nexport default connect(mapStateToProps)(CommentList);\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport CommentBox from 'components/CommentBox';\nimport CommentList from 'components/CommentList';\nimport * as actions from 'actions';\n\nconst Nav = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  font-size: 0.8em;\n  border-bottom: 1px solid pink;\n  padding: 0.5em 0;\n`;\n\nclass App extends Component {\n  renderButton() {\n    if (this.props.auth) {\n      return (\n        <button onClick={() => this.props.changeAuth(false)}>Sign Out</button>\n      );\n    } else {\n      return (\n        <button onClick={() => this.props.changeAuth(true)}>Sign In</button>\n      );\n    }\n  }\n\n  renderHeader() {\n    return (\n      <Nav>\n        <div>\n          <Link to=\"/\">Home</Link>\n        </div>\n        <div>\n          <Link to=\"/post\">Post a Comment</Link>\n        </div>\n        <div>{this.renderButton()}</div>\n      </Nav>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderHeader()}\n        <Route path=\"/post\" component={CommentBox} />\n        <Route path=\"/\" exact component={CommentList} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Root from 'Root';\nimport App from 'components/App';\nimport 'assets/styles/reset.css';\n\nReactDOM.render(\n  <Root>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </Root>,\n  document.querySelector('#root')\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport async from 'middlewares/async';\nimport stateValidator from 'middlewares/stateValidator';\nimport reducers from 'reducers';\n\nexport default ({ children, initialState = {} }) => {\n  const store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(async, stateValidator)\n  );\n\n  return <Provider store={store}>{children}</Provider>;\n};\n"],"sourceRoot":""}