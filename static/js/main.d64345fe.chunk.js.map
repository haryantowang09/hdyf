{"version":3,"sources":["middlewares/async.js","middlewares/stateSchema.js","middlewares/stateValidator.js","reducers/index.js","reducers/comments.js","actions/types.js","reducers/auth.js","Root.js","actions/index.js","components/CommentBox.js","components/requireAuth.js","components/CommentList.js","components/App.js","serviceWorker.js","index.js"],"names":["dispatch","next","action","payload","then","response","newAction","$schema","$id","type","title","description","required","properties","comments","default","items","examples","auth","getState","tv4","validate","stateSchema","console","warn","combineReducers","state","data","map","comment","name","children","initialState","store","createStore","reducers","applyMiddleware","async","stateValidator","saveComment","fetchComments","axios","get","changeAuth","isLoggedIn","Main","styled","main","Container","div","Form","form","Button","button","TextArea","textarea","CommentBox","handleChange","event","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","onChange","Component","connect","actions","ChildComponent","ComposedComponent","shouldNavigateAway","history","push","requireAuth","CommentList","key","renderComments","Nav","nav","BlogQuote","blockquote","App","onClick","to","renderButton","className","renderHeader","path","component","exact","autoFocus","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Root","document","querySelector","URL","process","href","origin","addEventListener","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d64345fe.chunk.js","sourcesContent":["export default ({ dispatch }) => (next) => (action) => {\n  // Check to see if an action has a promise on its 'payload' property\n  // If it does, then wait for it to resolve\n  // If it doesn't, then send the action on to the next middleware\n  if (!action.payload || !action.payload.then) {\n    return next(action);\n  }\n\n  // We want to wait for the promise to resolve (get its data!!)\n  // and then create a new action with that data and dispatch it\n  action.payload.then(function (response) {\n    const newAction = { ...action, payload: response };\n    dispatch(newAction);\n  });\n};\n","export default {\n  $schema: 'http://json-schema.org/draft-07/schema',\n  $id: 'http://example.com/example.json',\n  type: 'object',\n  title: 'The Root Schema',\n  description: 'The root schema comprises the entire JSON document.',\n  required: ['comments', 'auth'],\n  properties: {\n    comments: {\n      $id: '#/properties/comments',\n      type: 'array',\n      title: 'The Comments Schema',\n      description: 'An explanation about the purpose of this instance.',\n      default: [],\n      items: {\n        $id: '#/properties/comments/items',\n        type: 'string',\n        title: 'The Items Schema',\n        description: 'An explanation about the purpose of this instance.',\n        default: '',\n        examples: ['Comments #1', 'Comments #2'],\n      },\n    },\n    auth: {\n      $id: '#/properties/auth',\n      type: 'boolean',\n      title: 'The Auth Schema',\n      description: 'An explanation about the purpose of this instance.',\n      default: false,\n      examples: [true],\n    },\n  },\n};\n","import tv4 from 'tv4';\nimport stateSchema from './stateSchema';\n\nexport default ({ dispatch, getState }) => (next) => (action) => {\n  next(action);\n\n  if (!tv4.validate(getState(), stateSchema)) {\n    console.warn('Invalid state schema detected');\n  }\n};\n","import { combineReducers } from 'redux';\nimport commentsReducer from 'reducers/comments';\nimport authReducer from 'reducers/auth';\n\nexport default combineReducers({\n  comments: commentsReducer,\n  auth: authReducer,\n});\n","import { SAVE_COMMENT, FETCH_COMMENTS } from 'actions/types';\n\nexport default function (state = [], action) {\n  switch (action.type) {\n    case SAVE_COMMENT:\n      return [...state, action.payload];\n    case FETCH_COMMENTS:\n      const comments = action.payload.data.map((comment) => comment.name);\n      return [...state, ...comments];\n    default:\n      return state;\n  }\n}\n","export const SAVE_COMMENT = 'save_comment';\nexport const FETCH_COMMENTS = 'fetch_comments';\nexport const CHANGE_AUTH = 'change_auth';\n","import { CHANGE_AUTH } from 'actions/types';\n\nexport default function (state = false, action) {\n  switch (action.type) {\n    case CHANGE_AUTH:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport async from 'middlewares/async';\nimport stateValidator from 'middlewares/stateValidator';\nimport reducers from 'reducers';\n\nexport default ({ children, initialState = {} }) => {\n  const store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(async, stateValidator)\n  );\n\n  return <Provider store={store}>{children}</Provider>;\n};\n","import axios from 'axios';\nimport {\n  SAVE_COMMENT,\n  FETCH_COMMENTS,\n  CHANGE_AUTH,\n} from 'actions/types';\n\nexport function saveComment(comment) {\n  return {\n    type: SAVE_COMMENT,\n    payload: comment,\n  };\n}\n\nexport function fetchComments() {\n  const response = axios.get('https://jsonplaceholder.typicode.com/comments');\n  return {\n    type: FETCH_COMMENTS,\n    payload: response,\n  };\n}\n\nexport function changeAuth(isLoggedIn) {\n  return {\n    type: CHANGE_AUTH,\n    payload: isLoggedIn,\n  };\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from 'actions';\nimport requireAuth from 'components/requireAuth';\nimport styled from 'styled-components';\n\nconst Main = styled.main`\n  display: flex;\n  justify-content: center;\n  background-color: #f5f5f5;\n  height: calc(100vh - 37px);\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`;\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-top: 1em;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  border-radius: 5px;\n  padding: 7px 12px;\n  border: 1px solid #d5d5d5;\n  background-color: linear-gradient(#eee, #ddd);\n  font: 700 13px/18px Helvetica, arial;\n`;\n\nconst TextArea = styled.textarea`\n  border: 0;\n  border-radius: 5px;\n  height: 100px;\n  color: grey;\n  font-size: 0.8em;\n  font-family: Roboto-Italic;\n`;\n\nclass CommentBox extends Component {\n  state = { comment: '...' };\n\n  handleChange = (event) => {\n    this.setState({ comment: event.target.value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.saveComment(this.state.comment);\n    this.setState({ comment: '' });\n  };\n\n  render() {\n    return (\n      <Main>\n        <Container>\n          <h1>Hi, how do you feel ?</h1>\n          <Form onSubmit={this.handleSubmit}>\n            <TextArea value={this.state.comment} onChange={this.handleChange} />\n            <Button>Send</Button>\n          </Form>\n        </Container>\n      </Main>\n    );\n  }\n}\n\nexport default connect(null, actions)(requireAuth(CommentBox));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nexport default (ChildComponent) => {\n  class ComposedComponent extends Component {\n    componentDidMount() {\n      this.shouldNavigateAway();\n    }\n\n    componentDidUpdate() {\n      this.shouldNavigateAway();\n    }\n\n    shouldNavigateAway() {\n      if (!this.props.auth) {\n        this.props.history.push('/');\n      }\n    }\n\n    render() {\n      return <ChildComponent {...this.props} />;\n    }\n  }\n\n  function mapStateToProps(state) {\n    return { auth: state.auth };\n  }\n\n  return connect(mapStateToProps)(ComposedComponent);\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass CommentList extends Component {\n  renderComments() {\n    return this.props.comments.map((comment) => {\n      return <li key={comment}>{comment}</li>;\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h4>Comment List</h4>\n        <ul>{this.renderComments()}</ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { comments: state.comments };\n}\n\nexport default connect(mapStateToProps)(CommentList);\n","import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\n\nimport CommentBox from 'components/CommentBox';\nimport CommentList from 'components/CommentList';\nimport * as actions from 'actions';\n\nconst Nav = styled.nav`\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  font-size: 0.8em;\n  border-bottom: 1px solid pink;\n  padding: 0.5em 0;\n`;\n\nconst BlogQuote = styled.blockquote`\n  font-style: Italic;\n  color: #666666;\n`;\n\nclass App extends Component {\n  renderButton() {\n    if (this.props.auth) {\n      return (\n        <button onClick={() => this.props.changeAuth(false)}>Sign Out</button>\n      );\n    } else {\n      return (\n        <button onClick={() => this.props.changeAuth(true)}>Sign In</button>\n      );\n    }\n  }\n\n  renderHeader() {\n    return (\n      <Nav>\n        <div>\n          <Link to=\"/\">Home</Link>\n        </div>\n        <div>\n          <Link to=\"/post\">Post a Comment</Link>\n        </div>\n        <div>{this.renderButton()}</div>\n      </Nav>\n    );\n  }\n\n  render() {\n    return (\n      <main className=\"main-layout\">\n        {this.renderHeader()}\n        <Route path=\"/post\" component={CommentBox} />\n        <Route path=\"/\" exact component={CommentList} />\n        <BlogQuote>\n          No one here around me can help me feel totally save. I guess, there\n          never was. - Wang\n        </BlogQuote>\n        <input\n          type=\"tel\"\n          autoFocus\n        />\n      </main>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return { auth: state.auth };\n}\n\nexport default connect(mapStateToProps, actions)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport Root from 'Root';\nimport App from 'components/App';\nimport 'assets/styles/reset.css';\nimport 'assets/styles/layout.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Root>\n    <BrowserRouter>\n      <Route path=\"/\" component={App} />\n    </BrowserRouter>\n  </Root>,\n  document.querySelector('#root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}